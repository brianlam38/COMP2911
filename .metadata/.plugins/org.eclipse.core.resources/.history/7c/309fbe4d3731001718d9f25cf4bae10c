/*
	JOB CLASS

	Represents each Job that is needed to be done.
	@Params: Source city, Dest city, Weight
	@Methods:
	int hashCode = creates a hash number
	boolean equals = compares Job objects
*/
public class Job {
	private String from;
	private String to;
	private Integer cost;
	
	public Integer getCost() {
		return cost;
	}

	public Job(String from, String to, Integer cost) {
		this.from = from;
		this.to = to;
		this.cost = cost;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((from == null) ? 0 : from.hashCode());
		result = prime * result + ((to == null) ? 0 : to.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Job other = (Job) obj;
		if (from == null) {
			if (other.from != null)
				return false;
		} else if (!from.equals(other.from))
			return false;
		if (to == null) {
			if (other.to != null)
				return false;
		} else if (!to.equals(other.to))
			return false;
		return true;
	}
}
