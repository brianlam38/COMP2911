package lab5;

/*
 * SET: A collection of objects where there is no repetition, no order.
 * INTERAFACES: Equivalent of .h files in C. (Which ADT's etc. use)
 * NO CONSTRUCTOR: Interfaces have no constructor in the class.
 * 
 * Set implementation: Implement all methods in set + an iterator
 */

public interface Set<E> extends Iterable<E> {
	
	
	public Set<E> union(Set<E> other); // will return a set of strings if E is strings
	
	public Set<E> intersection(Set<E> other);
	
	public boolean contains (E obj); 
	
	// E is java generics, convention is 'E', when you create a set, E is saying I'm storing an object of type E
	// wherever you have E, it'll replace with the type of object you're storing 
	
	
	
}

//set.java
public interface Set<E> {
	public void addElement(E e);
	public void removeElement(E e);
	public boolean has(E e);
	public Set<E> union(Set<E> other);
	public Set<E> intersection(Set<E> other);
public boolean isSubset(Set<E> other); // if ‘other’ is subset
	public Set<E> equals (Object o);
}

