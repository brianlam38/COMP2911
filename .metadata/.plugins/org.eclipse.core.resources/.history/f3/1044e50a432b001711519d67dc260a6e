/**
 * COMP2911 FreightSystem Assignment 2
 * Date: April 2017
 * Author: Brian Lam
 */

import java.util.*;

// DESIGN

// Implement Djikstra's
// Do a run-through of base case f(n) = g(n)
// Implement Heuristic functions in Strategy Design
// Do a run-through of uniform-cost + heuristic cost f(n) = g(n) + h(n)

public class AStar {
	
	private Comparator<Integer> comparator;
	private PriorityQueue<Integer> pq;
	private ArrayList<Integer> prev;
	private ArrayList<Integer> dist;

	public AStar(int numCity) {
		this.comparator = new Comparator<Integer>();
		this.pq = new PriorityQueue<Integer>(numCity, comparator);
		this.prev = new ArrayList<Integer>();
		this.dist = new ArrayList<Integer>();
	}
	
	public void addToPQ(int numCity) {
		int prevStart = -1;
		for (int i = 0; i < numCity; i++) {
			prev.add(prevStart);
			pq.add(i);
		}
	}
	
	public void setDist(int numCity) {
		int distStart = 0;
		int distVal = Integer.MAX_VALUE;
		for (int i = 0; i < numCity; i++) {
			dist.add(distVal);
		}
		// set start distance = 0
		dist.add(FreightSystem.getCity("Sydney"), distStart);
	}
	
	public void aStar(int start) {
		while(!pq.)
		int vertex = pq.poll();
		
	}
}
