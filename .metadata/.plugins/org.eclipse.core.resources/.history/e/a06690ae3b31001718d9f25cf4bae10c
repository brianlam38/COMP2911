import java.util.HashSet;

/*
	STATE CLASS

	Represents different states (city / jobsList)
	@Params: Current city, jobList remaining
	@Methods:
	String getCity = return name of city
	HashSet<Job> getJobs = return list of remaining jobs
	int hashCode = create hash number?
	boolean equals = compares state objects
*/

public class State {
	private String city;
	private HashSet<Job> jobs;
	public State(String city, HashSet<Job> jobs) {
		this.city = city;
		this.jobs = jobs;
	}
	public String getCity() {
		return city;
	}
	public HashSet<Job> getJobs() {
		return jobs;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((city == null) ? 0 : city.hashCode());
		result = prime * result + ((jobs == null) ? 0 : jobs.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AStarState other = (State) obj;
		if (city == null) {
			if (other.city != null)
				return false;
		} else if (!city.equals(other.city))
			return false;
		if (jobs == null) {
			if (other.jobs != null)
				return false;
		} else if (!jobs.equals(other.jobs))
			return false;
		return true;
	}
}
